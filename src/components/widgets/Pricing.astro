---
import { Icon } from 'astro-icon/components';
import Button from '~/components/ui/Button.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Pricing as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  prices = [],

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />
  <div class="flex items-stretch justify-center">
    <div class="grid grid-cols-3 gap-4 dark:text-white sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3">
      {
        prices &&
          prices.map(({ title, subtitle, price, period, items, callToAction, hasRibbon = false, ribbonTitle }, index) => (
            <div class={`col-span-3 mx-auto flex w-full sm:col-span-1 md:col-span-1 lg:col-span-1 xl:col-span-1 ${index === 1 ? 'special-background special' : ''}`}>
              {price && period && (
                <div class="rounded-lg backdrop-blur border border-gray-200 dark:border-primary bg-white dark:bg-transparent px-6 py-8 flex w-full max-w-sm flex-col justify-between text-center ">
                  <div class="px-2 py-0">
                    {title && (
                      <h3 class="special-title text-center text-xl font-semibold uppercase leading-6 tracking-wider mb-2 text-primary">{title}</h3>
                    )}
                    {subtitle && <p class="font-semibold sm:text-lg text-gray-600 dark:text-white">{subtitle}</p>}
                    <div class="my-8">
                      <div class="flex items-center justify-center text-center mb-1">
                        <span class="text-5xl">$</span>
                        <span class="text-6xl font-extrabold">{price}</span>
                      </div>
                      <span class="special-period text-base leading-6 lowercase text-gray-600 dark:text-slate-400">{period}</span>
                    </div>
                    {items && (
                        <ul role="list" class="my-8 md:my-10 space-y-2 text-left">
                          {items.map(
                            ({ description, icon }) =>
                              description && (
                                <li class="mb-1.5 flex items-start space-x-3 leading-7">
                                  <div class={` rounded-full bg-primary mt-1 ${index === 1 ? 'special-price-icon text-[#1a1a1a]' : ''}`} >
                                    <Icon name={icon ? icon : 'tabler:check'} class="w-5 h-5 font-bold p-1" />
                                  </div>
                                  <span>{description}</span>
                                </li>
                              )
                          )}
                        </ul>
                      )}
                  </div>
                  {callToAction && (
                    <div class={`flex justify-center`}>
                      {typeof callToAction === 'string' ? (
                        <Fragment set:html={callToAction} />
                      ) : (
                        callToAction && callToAction.href && <Button {...hasRibbon ? { variant:'primary' } : {}} {...callToAction}/>
                      )}
                    </div>
                  )}
                </div>
              )}
            </div>
          ))
      }
    </div>
  </div>
</WidgetWrapper>

<style>
  .special-background {
    background: linear-gradient(45deg, #fc4778 0%, #3952f5 100%);
    overflow: hidden; /* Hide overflow to respect rounded corners */
    background-clip: border-box; /* Ensure background is clipped to the border box */
    border-radius: 8px; /* Adjust this value to control the roundness of the corners */
    position: relative; /* Needed for absolute positioning of the pseudo-element */
    color: white;
  }

  .special-price-icon {
    background-color: white; /* Sets the background color to white */
    color: #7e57c2; /* Sets the color of the font icon to purple */
    border-radius: 50%; /* Optional: Makes the icon background rounded */
    display: inline-flex; /* Helps center the icon if it's not already centered */
    align-items: center; /* Centers the icon vertically */
    justify-content: center; /* Centers the icon horizontally */
    width: 1.25rem; /* Sets the width of the icon */
    height: 1.25rem; /* Sets the height of the icon */
  }

  /* Selects the second child of the container and removes its border */
.special > :nth-child(1) {
  border: none;
}

.special .special-title {
  /* Add your custom styles here */
  color: #1a1a1a; /* Example: changing the title color to red */
}

.special .special-period {
  /* Add your custom styles here */
  color: #1a1a1a; /* Example: changing the period color to red */
}
</style>